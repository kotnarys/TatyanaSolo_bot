from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove

from database.queries import UserQueries
from utils.config_loader import config

router = Router()

async def request_phone_number(message: Message):
    """–ó–∞–ø—Ä–æ—Å —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ü–î –∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    welcome_text = f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
    welcome_text += "üì± –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–∞—à–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n\n"
    welcome_text += "üîí <b>–ó–∞—á–µ–º –Ω—É–∂–µ–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞?</b>\n"
    welcome_text += "‚Ä¢ –ü—Ä–∏–≤—è–∑–∫–∞ –ø–æ–∫—É–ø–æ–∫ —Å —Å–∞–π—Ç–∞ –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É\n"
    welcome_text += "‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\n"
    welcome_text += "‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞\n\n"
    welcome_text += "üìã <b>–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:</b>\n"
    welcome_text += "–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É \"–°–æ–≥–ª–∞—Å–µ–Ω\", –≤—ã –¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å 152-–§–ó \"–û –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\".\n\n"
    welcome_text += "üìÑ –° –ø–æ–ª–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–æ —Å—Å—ã–ª–∫–µ: "
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª–∏—Ç–∏–∫—É –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    policy_url = config.get('PRIVACY_POLICY_URL', 'https://example.com/privacy')
    welcome_text += f"{policy_url}"
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Å–æ–≥–ª–∞—Å–∏—è
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ü–î", callback_data="agree_privacy")],
        [InlineKeyboardButton(text="‚ùå –ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω", callback_data="disagree_privacy")],
        [InlineKeyboardButton(text="üìÑ –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", url=policy_url)]
    ])
    
    await message.answer(welcome_text, reply_markup=keyboard)

@router.callback_query(F.data == "agree_privacy")
async def handle_privacy_agreement(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ü–î"""
    user_id = callback.from_user.id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–∫—Ç —Å–æ–≥–ª–∞—Å–∏—è –≤ –ë–î
    await save_privacy_consent(user_id, True)
    
    # –¢–µ–ø–µ—Ä—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    phone_text = "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–≥–ª–∞—Å–∏–µ!\n\n"
    phone_text += "üì± –¢–µ–ø–µ—Ä—å –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n\n"
    phone_text += "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá"
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    
    await callback.message.edit_text(phone_text)
    await callback.message.answer("–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=keyboard)
    await callback.answer()

@router.callback_query(F.data == "disagree_privacy")
async def handle_privacy_disagreement(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–∞–∑–∞ –æ—Ç —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ü–î"""
    user_id = callback.from_user.id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–∫—Ç –æ—Ç–∫–∞–∑–∞
    await save_privacy_consent(user_id, False)
    
    disagree_text = "‚ùå <b>–°–æ–≥–ª–∞—Å–∏–µ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ</b>\n\n"
    disagree_text += "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n\n"
    disagree_text += "–≠—Ç–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ (152-–§–ó \"–û –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\").\n\n"
    disagree_text += "–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start"
    
    await callback.message.edit_text(disagree_text)
    await callback.answer()

@router.message(F.contact)
async def handle_contact(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞"""
    contact = message.contact
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–≤–æ–π –Ω–æ–º–µ—Ä
    if contact.user_id != user_id:
        await message.answer(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∞ –Ω–µ —á—É–∂–æ–π.",
            reply_markup=ReplyKeyboardMarkup(
                keyboard=[[KeyboardButton(text="üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)]],
                resize_keyboard=True,
                one_time_keyboard=True
            )
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ü–î
    temp_user = await UserQueries.get_user(user_id)
    if not temp_user:
        await message.answer(
            "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
            reply_markup=ReplyKeyboardRemove()
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏–µ (–æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å True)
    privacy_consent = temp_user.get('privacy_consent')
    if privacy_consent != 1 and privacy_consent != True:  # SQLite –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 0/1 –≤–º–µ—Å—Ç–æ False/True
        await message.answer(
            "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –¥–∞–π—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /start",
            reply_markup=ReplyKeyboardRemove()
        )
        return
    
    phone_number = contact.phone_number
    
    # –ü—Ä–∏–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä –∫ –µ–¥–∏–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É (–¥–æ–±–∞–≤–ª—è–µ–º + –µ—Å–ª–∏ –Ω–µ—Ç)
    if not phone_number.startswith('+'):
        phone_number = '+' + phone_number
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º
    existing_phone_user = await UserQueries.get_user_by_phone(phone_number)
    
    if existing_phone_user and existing_phone_user['user_id'] != user_id:
        # –ù–æ–º–µ—Ä —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        await message.answer(
            "‚ùå –≠—Ç–æ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.\n\n"
            "–ï—Å–ª–∏ —ç—Ç–æ –≤–∞—à –Ω–æ–º–µ—Ä, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
            reply_markup=ReplyKeyboardRemove()
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–µ–∞–ª—å–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    # –í–ê–ñ–ù–û: –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏!
    referrer_phone = temp_user.get('referrer_phone')
    print(f"üîç –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î: {temp_user}")
    print(f"üîç –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π —Ä–µ—Ñ–µ—Ä–µ—Ä: {referrer_phone}")
    
    await UserQueries.create_user(
        user_id=user_id,
        phone_number=phone_number,
        username=temp_user['username'],
        first_name=temp_user['first_name'],
        referrer_phone=referrer_phone  # –ü–µ—Ä–µ–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–∫—Ç —Å–æ–≥–ª–∞—Å–∏—è —Å –Ω–æ–≤—ã–º –Ω–æ–º–µ—Ä–æ–º
    await save_privacy_consent_with_phone(user_id, phone_number, True)
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = await UserQueries.get_user(user_id)
    
    success_text = "‚úÖ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω!\n\n"
    success_text += "üìã –í–∞—à–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å 152-–§–ó.\n\n"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
    if user_data['referrer_phone'] and user_data['referrer_phone'] != phone_number:
        success_text += "üéâ –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!\n"
        success_text += "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π –≤–∞—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –±–æ–Ω—É—Å.\n\n"
    
    await message.answer(success_text, reply_markup=ReplyKeyboardRemove())
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    from handlers.start import show_main_menu
    await show_main_menu(message, user_data, is_new_message=True)

async def save_temp_user_data(user_id: int, username: str, first_name: str, referrer_phone: str):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –≤—Ä–µ–º–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    temp_phone = f"temp_{user_id}"
    
    print(f"üîç –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: user_id={user_id}, referrer_phone={referrer_phone}")
    
    await UserQueries.create_user(
        user_id=user_id,
        phone_number=temp_phone,
        username=username,
        first_name=first_name,
        referrer_phone=referrer_phone
    )

async def save_privacy_consent(user_id: int, consent: bool):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ü–î"""
    try:
        from database.connection import db
        
        # –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º INSERT OR REPLACE! –¢–æ–ª—å–∫–æ UPDATE
        await db.execute("""
            UPDATE users 
            SET privacy_consent = ?, privacy_consent_date = CURRENT_TIMESTAMP
            WHERE user_id = ?
        """, (consent, user_id))
        
        print(f"üíæ –°–æ–≥–ª–∞—Å–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {consent}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏—è: {e}")

async def save_privacy_consent_with_phone(user_id: int, phone_number: str, consent: bool):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ü–î —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    try:
        from database.connection import db
        
        await db.execute("""
            UPDATE users 
            SET privacy_consent = ?, privacy_consent_date = CURRENT_TIMESTAMP
            WHERE user_id = ? OR phone_number = ?
        """, (consent, user_id, phone_number))
        
        print(f"üíæ –°–æ–≥–ª–∞—Å–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} ({phone_number}): {consent}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏—è: {e}")