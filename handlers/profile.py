from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from datetime import datetime

from database.queries import UserQueries
from utils.config_loader import config

router = Router()

@router.message(Command("profile"))
@router.callback_query(F.data == "profile")
async def show_profile(update):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if isinstance(update, CallbackQuery):
        user_id = update.from_user.id
        message = update.message
        answer_method = message.edit_text
    else:
        user_id = update.from_user.id
        message = update
        answer_method = message.answer
    
    user_data = await UserQueries.get_user(user_id)
    if not user_data:
        await answer_method("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è
    profile_text = f"üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
    profile_text += f"üÜî ID: <code>{user_id}</code>\n"
    profile_text += f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: <code>{user_data['phone_number']}</code>\n"
    profile_text += f"üë§ –ò–º—è: {user_data['first_name'] or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
    
    if user_data['username']:
        profile_text += f"üì± Username: @{user_data['username']}\n"
    
    # –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
    if user_data['subscription_end']:
        end_date = datetime.fromisoformat(user_data['subscription_end'])
        if end_date > datetime.now():
            profile_text += f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ: {end_date.strftime('%d.%m.%Y %H:%M')}\n"
            profile_text += f"üì¶ –¢–∞—Ä–∏—Ñ: {user_data['tariff_type']}\n"
            if user_data['tariff_type'] == 2:
                profile_text += f"üìö –ü–æ–ª—É—á–µ–Ω–æ —É—Ä–æ–∫–æ–≤: {user_data['tariff2_counter']}\n"
        else:
            profile_text += "‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞\n"
    else:
        profile_text += "‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞\n"
    
    # –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
    if user_data['referral_balance'] > 0:
        profile_text += f"üí∞ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: {user_data['referral_balance']}‚ÇΩ\n"
    
    # –ö–Ω–æ–ø–∫–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="referral")],
        [InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])
    
    await answer_method(profile_text, reply_markup=keyboard)

@router.message(Command("referral"))
@router.callback_query(F.data == "referral")
async def show_referral(update):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É"""
    if isinstance(update, CallbackQuery):
        user_id = update.from_user.id
        message = update.message
        answer_method = message.edit_text
    else:
        user_id = update.from_user.id
        message = update
        answer_method = message.answer
    
    user_data = await UserQueries.get_user(user_id)
    if not user_data:
        await answer_method("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∞–≤–æ –Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
    if not user_data['has_paid']:
        referral_text = "‚ùå <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</b>\n\n"
        referral_text += "–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–∞–∑ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É."
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="show_tariffs")],
            [InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ])
    else:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        bot_username = config.get('BOT_USERNAME', 'your_bot_username')
        # –£–±–∏—Ä–∞–µ–º + –∏ –¥–µ–ª–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä
        phone_clean = user_data['phone_number'].replace('+', '')
        referral_link = f"https://t.me/{bot_username}?start=r{phone_clean}"
        
        referral_text = f"üë• <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n\n"
        referral_text += f"üí∞ –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: <b>{user_data['referral_balance']}‚ÇΩ</b>\n\n"
        referral_text += "üéÅ <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n"
        referral_text += f"‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ\n"
        referral_text += f"‚Ä¢ –ö–æ–≥–¥–∞ –¥—Ä—É–≥ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ {config.get_int('REFERRAL_BONUS')}‚ÇΩ\n"
        referral_text += f"‚Ä¢ –ë–æ–Ω—É—Å—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ —Å–∫–∏–¥–∫—É –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ\n\n"
        referral_text += f"üîó <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>\n"
        referral_text += f"<code>{referral_link}</code>\n\n"
        referral_text += f"üö® <b>–û–ß–ï–ù–¨ –í–ê–ñ–ù–û!</b> –°–∫–∞–∂–∏—Ç–µ –¥—Ä—É–≥—É:\n"
        referral_text += f"1Ô∏è‚É£ –ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ\n"
        referral_text += f"2Ô∏è‚É£ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –Ω–∞–ø–∏—Å–∞—Ç—å /start –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º\n"
        referral_text += f"3Ô∏è‚É£ –ù–ï –Ω–∞–∂–∏–º–∞—Ç—å –∫–Ω–æ–ø–∫—É START –≤ –ø—Ä–æ—Ñ–∏–ª–µ!\n\n"
        referral_text += f"üì± <b>–ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n"
        referral_text += f"–î—Ä—É–≥ –º–æ–∂–µ—Ç —É–∫–∞–∑–∞—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä <code>{user_data['phone_number']}</code> –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π", url=f"https://t.me/share/url?url={referral_link}")],
            [InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ])
    
    await answer_method(referral_text, reply_markup=keyboard)

@router.callback_query(F.data == "show_tariffs")
async def show_tariffs(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã"""
    user_id = callback.from_user.id
    user_data = await UserQueries.get_user(user_id)
    
    tariff_text = "üì¶ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã</b>\n\n"
    
    # –¶–µ–Ω—ã —Å —É—á–µ—Ç–æ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
    tariff1_price = config.get_int('TARIFF_1_PRICE')
    tariff2_price = config.get_int('TARIFF_2_PRICE')
    referral_balance = user_data['referral_balance'] if user_data else 0
    
    if referral_balance > 0:
        tariff1_final = max(0, tariff1_price - referral_balance)
        tariff2_final = max(0, tariff2_price - referral_balance)
        
        tariff_text += f"üí∞ –í–∞—à–∞ —Å–∫–∏–¥–∫–∞: {referral_balance}‚ÇΩ\n\n"
        tariff_text += f"üí≥ <b>–¢–∞—Ä–∏—Ñ 1</b> - ~~{tariff1_price}‚ÇΩ~~ <b>{tariff1_final}‚ÇΩ</b>\n"
        tariff_text += "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –Ω–∞ 30 –¥–Ω–µ–π\n\n"
        
        tariff_text += f"üíé <b>–¢–∞—Ä–∏—Ñ 2</b> - ~~{tariff2_price}‚ÇΩ~~ <b>{tariff2_final}‚ÇΩ</b>\n"
        tariff_text += "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –Ω–∞ 30 –¥–Ω–µ–π\n"
        tariff_text += "‚Ä¢ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –∫—É—Ä—Å–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –æ–ø–ª–∞—Ç—ã\n"
    else:
        tariff_text += f"üí≥ <b>–¢–∞—Ä–∏—Ñ 1</b> - {tariff1_price}‚ÇΩ\n"
        tariff_text += "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –Ω–∞ 30 –¥–Ω–µ–π\n\n"
        
        tariff_text += f"üíé <b>–¢–∞—Ä–∏—Ñ 2</b> - {tariff2_price}‚ÇΩ\n"
        tariff_text += "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –Ω–∞ 30 –¥–Ω–µ–π\n"
        tariff_text += "‚Ä¢ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –∫—É—Ä—Å–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –æ–ø–ª–∞—Ç—ã\n"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ –ö—É–ø–∏—Ç—å –¢–∞—Ä–∏—Ñ 1", callback_data="buy_tariff_1")],
        [InlineKeyboardButton(text="üíé –ö—É–ø–∏—Ç—å –¢–∞—Ä–∏—Ñ 2", callback_data="buy_tariff_2")],
        [InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])
    
    await callback.message.edit_text(tariff_text, reply_markup=keyboard)
    await callback.answer()