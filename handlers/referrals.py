from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from database.queries import UserQueries
from utils.config_loader import config

router = Router()

async def ask_for_referral(message: Message, user_id: int, username: str, first_name: str):
    """–°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É"""
    referral_text = "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
    referral_text += "ü§ù –ü—Ä–∏—à–ª–∏ –ª–∏ –≤—ã –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –æ—Ç –¥—Ä—É–≥–∞?\n\n"
    referral_text += "–ï—Å–ª–∏ –¥–∞ - –Ω–∞–∂–º–∏—Ç–µ \"–î–∞, –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é\"\n"
    referral_text += "–ï—Å–ª–∏ –Ω–µ—Ç - –Ω–∞–∂–º–∏—Ç–µ \"–ù–µ—Ç, —Å–∞–º –Ω–∞—à–µ–ª\""
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="ü§ù –î–∞, –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é", callback_data="has_referrer")],
        [InlineKeyboardButton(text="üîç –ù–µ—Ç, —Å–∞–º –Ω–∞—à–µ–ª", callback_data="no_referrer")]
    ])
    
    await message.answer(referral_text, reply_markup=keyboard)

@router.callback_query(F.data == "has_referrer")
async def handle_has_referrer(callback: CallbackQuery):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à–µ–ª –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é"""
    user_id = callback.from_user.id
    
    referrer_text = "ü§ù –û—Ç–ª–∏—á–Ω–æ!\n\n"
    referrer_text += "üì± –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n\n"
    referrer_text += "–ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–∞—à–µ–≥–æ –¥—Ä—É–≥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
    referrer_text += "<code>+79123456789</code>\n\n"
    referrer_text += "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ \"–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å\", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ —É–∫–∞–∑—ã–≤–∞—Ç—å."
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="no_referrer")]
    ])
    
    await callback.message.edit_text(referrer_text, reply_markup=keyboard)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–æ–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞"
    from database.connection import db
    await db.execute("""
        INSERT OR REPLACE INTO users 
        (user_id, phone_number, username, first_name, waiting_for_referrer)
        VALUES (?, ?, ?, ?, ?)
    """, (user_id, f"temp_{user_id}", callback.from_user.username, callback.from_user.first_name, True))
    
    await callback.answer()

@router.callback_query(F.data == "no_referrer")
async def handle_no_referrer(callback: CallbackQuery):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à–µ–ª —Å–∞–º"""
    user_id = callback.from_user.id
    username = callback.from_user.username
    first_name = callback.from_user.first_name
    
    from handlers.registration import save_temp_user_data, request_phone_number
    
    await save_temp_user_data(user_id, username, first_name, None)
    
    await callback.message.edit_text("üëç –ü–æ–Ω—è—Ç–Ω–æ, –≤—ã –Ω–∞—à–ª–∏ –Ω–∞—Å —Å–∞–º–∏!")
    await request_phone_number(callback.message)
    await callback.answer()

@router.message(F.text.regexp(r'^\+\d{10,15}$'))
async def handle_referrer_phone(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞"""
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
    from database.connection import db
    user_data = await db.fetchone("""
        SELECT waiting_for_referrer FROM users WHERE user_id = ?
    """, (user_id,))
    
    if not user_data or not user_data[0]:
        return  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
    
    referrer_phone = message.text.strip()
    username = message.from_user.username
    first_name = message.from_user.first_name
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ—Ñ–µ—Ä–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ
    referrer_data = await UserQueries.get_user_by_phone(referrer_phone)
    
    if referrer_data:
        from handlers.registration import save_temp_user_data, request_phone_number
        
        await save_temp_user_data(user_id, username, first_name, referrer_phone)
        
        await message.answer(
            f"‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í–∞—à –¥—Ä—É–≥ {referrer_phone} –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.\n"
            f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏ –æ–Ω –ø–æ–ª—É—á–∏—Ç –±–æ–Ω—É—Å!"
        )
        
        # –£–±–∏—Ä–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è
        await db.execute("""
            UPDATE users SET waiting_for_referrer = FALSE WHERE user_id = ?
        """, (user_id,))
        
        await request_phone_number(message)
    else:
        await message.answer(
            f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–æ–º–µ—Ä–æ–º {referrer_phone} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n"
            f"–í–æ–∑–º–æ–∂–Ω–æ:\n"
            f"‚Ä¢ –í–∞—à –¥—Ä—É–≥ –µ—â–µ –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–æ—Ç–µ\n"
            f"‚Ä¢ –ù–æ–º–µ—Ä —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ\n\n"
            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ \"–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å\"",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="no_referrer")]
            ])
        )