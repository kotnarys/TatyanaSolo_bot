from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart
from aiogram.filters.command import CommandObject
from datetime import datetime

from database.queries import UserQueries
from utils.config_loader import config

router = Router()

@router.message(CommandStart(deep_link=True, magic=F.args.regexp(r"r\d+")))
async def cmd_start_with_referral(message: Message, command: CommandObject):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º"""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
    referral_param = command.args
    print(f"üîç –ü–æ–ª—É—á–µ–Ω —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: '{referral_param}'")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
    referrer_phone = None
    if referral_param and referral_param.startswith('r'):
        phone_digits = referral_param[1:]  # –£–±–∏—Ä–∞–µ–º 'r'
        referrer_phone = '+' + phone_digits  # –î–æ–±–∞–≤–ª—è–µ–º +
        print(f"üîç –ò–∑–≤–ª–µ—á–µ–Ω –Ω–æ–º–µ—Ä —Ä–µ—Ñ–µ—Ä–µ—Ä–∞: '{referrer_phone}'")
    
    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    existing_user = await UserQueries.get_user(user_id)
    
    if existing_user and existing_user['phone_number'] and not existing_user['phone_number'].startswith('temp_'):
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        await show_main_menu(message, existing_user)
    else:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
        try:
            from handlers.registration import save_temp_user_data, request_phone_number
            # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            await save_temp_user_data(user_id, username, first_name, referrer_phone)
            await request_phone_number(message)
        except ImportError:
            # –ï—Å–ª–∏ –º–æ–¥—É–ª—å registration –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞
            await message.answer(
                f"üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
                f"–í—ã –ø—Ä–∏—à–ª–∏ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –æ—Ç {referrer_phone}!\n"
                f"–°–∏—Å—Ç–µ–º–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–ª–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è."
            )

@router.message(CommandStart())
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    
    print(f"üîç –û–±—ã—á–Ω—ã–π /start –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î –ø–æ user_id
    existing_user = await UserQueries.get_user(user_id)
    
    if existing_user and existing_user['phone_number'] and not existing_user['phone_number'].startswith('temp_'):
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Å —Ä–µ–∞–ª—å–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        await show_main_menu(message, existing_user)
    else:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
        try:
            from handlers.referrals import ask_for_referral
            # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
            await ask_for_referral(message, user_id, username, first_name)
        except ImportError:
            # –ï—Å–ª–∏ –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ—Å—Ç–∞—è –∑–∞–≥–ª—É—à–∫–∞
            await message.answer(
                "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
                "ü§ù –ü—Ä–∏—à–ª–∏ –ª–∏ –≤—ã –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –æ—Ç –¥—Ä—É–≥–∞?\n"
                "–°–∏—Å—Ç–µ–º–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è."
            )

async def show_main_menu(message_or_callback, user_data, is_new_message=False):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    display_name = user_data['username'] if user_data['username'] else (user_data['first_name'] if user_data['first_name'] else "–¥–æ—Ä–æ–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
    has_subscription = await UserQueries.check_subscription(user_data['user_id'])
    
    if has_subscription:
        end_date = datetime.fromisoformat(user_data['subscription_end'])
        welcome_text = f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {display_name}!\n\n"
        welcome_text += f"‚úÖ –£ –≤–∞—Å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–æ {end_date.strftime('%d.%m.%Y')}\n\n"
        welcome_text += "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –º–Ω–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã! üí¨"
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
            [InlineKeyboardButton(text="üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="referral")],
            [InlineKeyboardButton(text="üìö –ö—É–ø–∏—Ç—å –∫—É—Ä—Å", callback_data="buy_course")]
        ])
    else:
        welcome_text = f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {display_name}!\n\n"
        welcome_text += "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.\n\n"
        welcome_text += "üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã:\n"
        welcome_text += f"‚Ä¢ –¢–∞—Ä–∏—Ñ 1 - {config.get_int('TARIFF_1_PRICE')}‚ÇΩ (–±–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø)\n"
        welcome_text += f"‚Ä¢ –¢–∞—Ä–∏—Ñ 2 - {config.get_int('TARIFF_2_PRICE')}‚ÇΩ (–¥–æ—Å—Ç—É–ø + –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∫—É—Ä—Å–∞)"
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üí≥ –¢–∞—Ä–∏—Ñ 1", callback_data="buy_tariff_1")],
            [InlineKeyboardButton(text="üíé –¢–∞—Ä–∏—Ñ 2", callback_data="buy_tariff_2")],
            [InlineKeyboardButton(text="üìö –ö—É–ø–∏—Ç—å –∫—É—Ä—Å", callback_data="buy_course")],
            [InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
            [InlineKeyboardButton(text="üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="referral")]
        ])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    if hasattr(message_or_callback, 'edit_text') and not is_new_message:
        # –≠—Ç–æ callback –∏ –º–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        try:
            await message_or_callback.edit_text(welcome_text, reply_markup=keyboard)
        except:
            # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            await message_or_callback.answer(welcome_text, reply_markup=keyboard)
    else:
        # –≠—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ
        await message_or_callback.answer(welcome_text, reply_markup=keyboard)

@router.callback_query(F.data == "main_menu")
async def main_menu(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    user_data = await UserQueries.get_user(callback.from_user.id)
    if user_data:
        await show_main_menu(callback.message, user_data)
    await callback.answer()

@router.callback_query(F.data == "buy_course")
async def show_course_info(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–µ"""
    user_id = callback.from_user.id
    user_data = await UserQueries.get_user(user_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫—É—Ä—Å–∞ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    course_name = config.get('COURSE_NAME', '–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –ø–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º')
    course_url = config.get('COURSE_URL', 'https://example.com/course')
    
    course_text = f"üìö <b>{course_name}</b>\n\n"
    course_text += "üéØ <b>–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:</b>\n"
    course_text += "‚Ä¢ 20+ —á–∞—Å–æ–≤ –æ–±—É—á–∞—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"
    course_text += "‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –∏ –∫–µ–π—Å—ã\n"
    course_text += "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É\n"
    course_text += "‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏\n"
    course_text += "‚Ä¢ –ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º\n\n"
    
    course_text += "üí° <b>–î–ª—è –∫–æ–≥–æ –∫—É—Ä—Å:</b>\n"
    course_text += "‚Ä¢ –ù–æ–≤–∏—á–∫–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ –ò–ò\n"
    course_text += "‚Ä¢ –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π –∏ –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–æ–≤\n"
    course_text += "‚Ä¢ –í—Å–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –æ—Å–≤–æ–∏—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏\n\n"
    
    course_text += "üöÄ <b>–ü–æ—Å–ª–µ –∫—É—Ä—Å–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ:</b>\n"
    course_text += "‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å ChatGPT –∏ –¥—Ä—É–≥–∏–º–∏ –ò–ò\n"
    course_text += "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏\n"
    course_text += "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø–æ–º–æ—â—å—é –ò–ò\n"
    course_text += "‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –ò–ò –≤ —Å–≤–æ–π –±–∏–∑–Ω–µ—Å\n\n"
    
    course_text += "üí∞ <b>–ü–æ–∫—É–ø–∫–∞ –∏ –¥–æ—Å—Ç—É–ø:</b>\n"
    course_text += "‚Ä¢ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —Å–∞–π—Ç–µ\n"
    course_text += "‚Ä¢ –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É\n"
    course_text += "‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ç–æ—Ç –∂–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ –∏ –≤ Telegram"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üåê –ö—É–ø–∏—Ç—å –∫—É—Ä—Å –Ω–∞ —Å–∞–π—Ç–µ", url=course_url)],
        [InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])
    
    await callback.message.edit_text(course_text, reply_markup=keyboard)
    await callback.answer()